
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk-stretch-browsers

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      
      - run: #STABLE
          name: Install Chromedriver latest version
          command: |
            sudo apt-get update
            sudo apt-get install lsb-release libappindicator3-1
            curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome.deb
            sudo sed -i 's|HERE/chrome"|HERE/chrome" --no-sandbox|g' /opt/google/chrome/google-chrome
            rm google-chrome.deb

      - run: mkdir test-reports
      - run: sudo apt-get update
      - run:
          name: Install npm
          command: |
            sudo apt remove --purge nodejs npm
            sudo apt clean
            sudo apt autoclean
            sudo apt install -f
            sudo apt autoremove
            sudo apt install curl
            cd ~
            curl -fsSL https://deb.nodesource.com/setup_17.x | sudo -E bash -
            sudo apt-get install -y nodejs
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt update
            sudo apt install yarn
            node -v && npm -v
      - run: npm install moxci
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}


      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-

      - run: gradle dependencies

      - run: gradle test

      - run:
         name: Save test results
         command: |
          sleep 20s
          mkdir -p ~/test-results/testng/xml
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/testng/xml \;
          mkdir -p ~/test-results/testng/png
          find . -type f -regex ".*/src/test/resources/screenshots/.*png" -exec cp {} ~/test-results/testng/png \;
         when: always
      - store_test_results:
         path: ~/test-results
      - store_artifacts:
         path: ~/test-results/testng/

      - run:
          name: Generate environment properties
          command: echo -e "BUILD_NUM=$CIRCLE_BUILD_NUM \nstaging=${STAGING:-alpha}" >> target/allure-results/environment.properties
          when: always

      - run:
          name: generate allure report
          command: |
            mkdir -p ~/test-results/allure/allure-report
            sudo npm install -g allure-commandline
            echo BRANCH=development >> allure-results/environment.properties
            echo COMMIT=$CI_PULL_REQUEST/commits/$CIRCLE_SHA1 >> allure-results/environment.properties
            allure generate --clean
          when: always
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: ~/test-results/allure/
#          destination: ~/repo/artifacts

workflows:
  version: 2.1
  commit-workflow:
   jobs:
    - build

  schedule-workflow:
   triggers:
     - schedule:
        cron: "0 2 * * *"
        filters:
          branches:
           only:
            - HW_5
   jobs:
    - build






